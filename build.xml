<project name="BFST" default="dist" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
    <property name="main.build.dir" value="./out/main"/>
    <property name="main.src.dir" value="./src"/>
    <property name="test.build.dir" value="./out/test"/>
    <property name="test.src.dir" value="./tests"/>
    <property name="main.resources" value="./resources"/>
    <property name="test.resources" value="./testResources"/>
    <property name="dist" location="./out"/>
    <property name="result.dir" location="${dist}/target"/>
    <property name="result.report.dir" location="${result.dir}/site/jacoco"/>
    <property name="result.report.file" location="${result.dir}/jacoco.exec"/>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="lib/jacocoant.jar"/>
    </taskdef>

    <path id="classpath.test">
        <pathelement location="lib/junit-4.12.jar"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${main.build.dir}"/>
    </path>

    <target name="compile" depends="clean">
        <mkdir dir="${main.build.dir}"/>
        <javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false"/>
        <copy todir="${main.build.dir}" overwrite="true">
            <fileset dir="${main.resources}"/>
        </copy>
    </target>

    <target name="test-compile" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
        <copy todir="${test.build.dir}" overwrite="true">
            <fileset dir="${test.resources}"/>
        </copy>
    </target>

    <target name="dist" depends="compile">
        <jar destfile="${dist}/BFST.jar" basedir="${main.build.dir}">
            <manifest>
                <attribute name="Main-Class" value="Main"/>
            </manifest>
        </jar>
    </target>

    <target name="test" depends="test-compile">
        <jacoco:agent property="agentvmparam" destfile="${result.report.file}"/>
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <jvmarg value="${agentvmparam}"/>
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${test.build.dir}"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <batchtest fork="true">
                <fileset dir="${test.src.dir}" includes="**/*.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="coverage" depends="test">
        <mkdir dir="${result.report.dir}"/>

        <jacoco:report>
            <executiondata>
                <file file="${result.report.file}"/>
            </executiondata>
            <!--  the class files and optional source files ...  -->
            <structure name="JaCoCo Ant Example">
                <classfiles>
                    <fileset dir="${main.build.dir}"/>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="${main.src.dir}"/>
                </sourcefiles>
            </structure>
            <!--  to produce reports in different formats.  -->
            <html destdir="${result.report.dir}"/>
            <csv destfile="${result.report.dir}/jacoco.csv"/>
            <xml destfile="${result.report.dir}/jacoco.xml"/>
        </jacoco:report>
    </target>
    <target name="clean" description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="out"></delete>
    </target>
</project>
